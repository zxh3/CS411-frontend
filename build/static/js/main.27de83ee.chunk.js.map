{"version":3,"sources":["components/Navbar.js","components/SearchBar.js","components/DishCardReveal.js","components/DishCard.js","components/Dishes.js","components/AddDish.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","SearchBar","state","search","handleSubmit","e","preventDefault","_this","props","handleSearch","setState","handleChange","Object","defineProperty","target","id","value","autoComplete","onSubmit","this","type","onChange","htmlFor","Component","DishCardReveal","restaurants","length","map","restaurant","key","DishCard","ingredients","newName","handleChangeDishName","dishName","_this2","M","AutoInit","axios","get","concat","then","res","data","x","ingredientName","catch","err","console","error","restaurantName","_this3","join","src","alt","onClick","handleDelete","href","components_DishCardReveal","Dishes","dishNames","delete","filter","oldName","put","_","prevState","prevProps","log","isEqual","searchedIngredient","results","dishcards","dn","components_DishCard","AddDish","split","trim","post","toast","html","style","marginTop","App","components_Navbar","components_AddDish","components_SearchBar","components_Dishes","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27de83ee.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className=\"nav-wrapper blue-grey lighten-5\">\n        <div className=\"brand-logo center blue-grey-text\">EatMood</div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n  state = {\n    search: \"\"\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleSearch(this.state.search);\n    this.setState({\n      search: \"\"\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <form className=\"input-field col s6 offset-s3 center-align\" autoComplete=\"off\" onSubmit={this.handleSubmit}>\n          <i className=\"material-icons prefix\">search</i>\n          <input id=\"search\" type=\"text\" value={this.state.search} onChange={this.handleChange} />\n          <label htmlFor=\"search\">Find a dish with an ingredient, e.g., chicken</label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nconst DishCardReveal = (props) => {\n  let restaurants = <tr><td>loading...</td></tr>\n  if (props.restaurants.length > 0) {\n    restaurants = props.restaurants.map(restaurant => {\n      return (\n        <tr key={restaurant}><td>{restaurant}</td></tr>\n      );\n    });\n  }\n\n  return (\n    <div>\n      <table className=\"centered highlight\">\n        <thead>\n          <tr>\n            <th>Restaurant</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {restaurants}\n        </tbody>\n      </table>\n\n      <div className=\"row\">\n        <form className=\"col s12\">\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">mode_edit</i>\n              <input id=\"icon_prefix\" type=\"text\" autoComplete=\"off\"/>\n              <label htmlFor=\"icon_prefix\">add</label>\n            </div>\n          </div>\n        </form>\n      </div>\n\n    </div>\n  );\n}\n\nexport default DishCardReveal;","import React, { Component } from 'react';\nimport DishCardReveal from './DishCardReveal';\nimport axios from 'axios';\nimport M from 'materialize-css';\n\nclass DishCard extends Component {\n  state = {\n    ingredients: [],\n    restaurants: [],\n    newName: \"\"\n  }\n\n  componentDidMount() {\n    M.AutoInit();\n    axios.get(`http://localhost:2018/ingredients/${this.props.dishName}`)\n      .then(res => {\n        this.setState({\n          ingredients: res.data.map(x => x.ingredientName)\n        })\n      })\n      .catch(err => console.error(err));\n\n    axios.get(`http://localhost:2018/restaurants/${this.props.dishName}`)\n      .then(res => {\n        this.setState({\n          restaurants: res.data.map(x => x.restaurantName)\n        })\n      })\n      .catch(err => console.error(err));\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let newName = this.state.newName;\n    this.setState({newName: \"\"});\n    this.props.handleChangeDishName(this.props.dishName, newName);\n  }\n\n  render() {\n    let ingredients = <p>UNKNOWN</p>;\n    if (this.state.ingredients.length > 0) {\n      ingredients = <p>{this.state.ingredients.join(', ')}</p>\n    }\n\n    return (\n      <div className=\"col s6 m4\">\n        <div className=\"card\">\n\n          <div className=\"card-image\">\n            <img className=\"activator\" src=\"https://images.pexels.com/photos/70497/pexels-photo-70497.jpeg?cs=srgb&dl=food-dinner-lunch-70497.jpg&fm=jpg\" alt=\"food\" />\n            <div className=\"btn-floating halfway-fab waves-effect waves-light red\" onClick={() => this.props.handleDelete(this.props.dishName)}><i className=\"material-icons\">delete</i></div>\n          </div>\n\n          <div className=\"card-content\">\n            <a className=\"card-title modal-trigger\" href={`#${this.props.dishName}`}><i className=\"material-icons right\">mode_edit</i>{this.props.dishName}</a>\n\n            <div id={this.props.dishName} className=\"modal\">\n              <div className=\"modal-content\">\n                <form className=\"input-field\" onSubmit={this.handleSubmit}>\n                  <input id=\"newName\" type=\"text\" value={this.state.newName} onChange={this.handleChange} />\n                  <label htmlFor=\"newName\">New Dish Name</label>\n                  <button className=\"btn\">Submit</button>\n                </form>\n              </div>\n            </div>\n\n            {ingredients}\n          </div>\n\n          <div className=\"card-reveal\">\n              <span className=\"card-title\"><i className=\"material-icons right\">close</i></span>\n              <DishCardReveal restaurants={this.state.restaurants}/>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DishCard;","import React, { Component } from 'react';\nimport DishCard from './DishCard';\nimport axios from 'axios';\nimport { isEqual } from 'lodash';\n\nclass Dishes extends Component {\n  state = {\n    dishNames: []\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('[componentDidUpdate] @ Dishes.js');\n    if (prevProps === this.props && isEqual(prevState, this.state)) {\n      return;\n    }\n\n    axios.get(`http://localhost:2018/dishes/${this.props.searchedIngredient}`)\n      .then(res => {\n        this.setState({dishNames: res.data.results.map(x => x.dishName)});\n      })\n      .catch(err => console.error(err));\n  }\n\n  handleDelete = (dishName) => {\n    axios.delete(`http://localhost:2018/dishes/${dishName}`)\n      .then(res => {\n        this.setState({dishNames: this.state.dishNames.filter(x => x !== dishName)});\n      })\n      .catch(err => console.error(err));\n  }\n\n  handleChangeDishName = (oldName, newName) => {\n    axios.put(`http://localhost:2018/dishes`, {\n      oldName,\n      newName\n    })\n      .then(_ => {\n        this.setState(prevState => {\n          return {\n            dishName: prevState.dishNames.map(x => x === oldName ? newName : x)\n          }\n        });\n      })\n      .catch(err => console.error(err));\n  }\n  \n  render() {\n    const dishcards = this.state.dishNames.map(dn => <DishCard dishName={dn} key={dn} handleDelete={this.handleDelete} handleChangeDishName={this.handleChangeDishName} />)\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {dishcards}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dishes;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport M from 'materialize-css';\n\nclass AddDish extends Component {\n  state = {\n    dishName: \"\",\n    ingredients: \"\"\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let dishName = this.state.dishName;\n    let ingredients = this.state.ingredients.split(',').map(x => x.trim());\n\n    if (dishName.length === 0 || this.state.ingredients.length === 0) {\n      M.toast({html: 'Fields cannot be empty'});\n      return;\n    } else {\n      axios.post('http://localhost:2018/addDish', {\n        dishName,\n        ingredients\n      })\n        .then(res => {\n          if (res.data.error) {\n            M.toast({html: res.data.error});\n          } else {\n            M.toast({html: \"Success!\"});\n          }\n        })\n        .catch(err => console.error(err));\n    }\n    this.setState({\n      dishName: \"\",\n      ingredients: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col offset-s1\" style={{marginTop: '10px'}}>\n            <a className=\"btn-floating waves-effect waves-light red lighten-2 modal-trigger\" href=\"#modal1\"><i className=\"material-icons\">add</i></a>\n          </div>\n        </div>\n\n        <div id=\"modal1\" className=\"modal\">\n          <div className=\"modal-content\">\n            <h3 className=\"red-text text-lighten-2\">Create a new dish!</h3>\n            <div className=\"row\">\n              <form className=\"col s12\" onSubmit={this.handleSubmit}>\n\n                <div className=\"row\">\n                  <div className=\"input-field col s6\">\n                    <input id=\"dishName\" type=\"text\" onChange={this.handleChange} value={this.state.dishName} autoComplete=\"off\" />\n                    <label htmlFor=\"dishName\">Dish Name</label>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"input-field col s6\">\n                    <input id=\"ingredients\" type=\"text\" onChange={this.handleChange} value={this.state.ingredients} autoComplete=\"off\" />\n                    <label htmlFor=\"ingredients\">Ingredients, separate by comma</label>\n                  </div>\n                </div>\n\n                <button className=\"btn red lighten-2\">Submit</button>\n\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddDish;","import React, { Component } from 'react';\n\nimport Navbar from './components/Navbar';\nimport SearchBar from './components/SearchBar';\nimport Dishes from './components/Dishes';\nimport AddDish from './components/AddDish';\n\n// Import Materialize\nimport M from \"materialize-css\";\n\nclass App extends Component {\n  state = {\n    searchedIngredient: \"\"\n  }\n\n  componentDidMount() {\n    M.AutoInit();\n  }\n\n  handleSearch = (searchedIngredient) => {\n    this.setState({\n      searchedIngredient\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <AddDish />\n        <SearchBar handleSearch={this.handleSearch}/>\n        <Dishes searchedIngredient={this.state.searchedIngredient} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}